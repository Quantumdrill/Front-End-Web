// node_modules/get-it/dist/_chunks-es/_commonjsHelpers.js
var e = !(typeof navigator > "u") && "ReactNative" === navigator.product;
var t = { timeout: e ? 6e4 : 12e4 };
var r = function(r2) {
  const a2 = { ...t, ..."string" == typeof r2 ? { url: r2 } : r2 };
  if (a2.timeout = n(a2.timeout), a2.query) {
    const { url: t2, searchParams: r3 } = function(t3) {
      const r4 = t3.indexOf("?");
      if (-1 === r4) return { url: t3, searchParams: new URLSearchParams() };
      const n2 = t3.slice(0, r4), a3 = t3.slice(r4 + 1);
      if (!e) return { url: n2, searchParams: new URLSearchParams(a3) };
      if ("function" != typeof decodeURIComponent) throw new Error("Broken `URLSearchParams` implementation, and `decodeURIComponent` is not defined");
      const s2 = new URLSearchParams();
      for (const e2 of a3.split("&")) {
        const [t4, r5] = e2.split("=");
        t4 && s2.append(o(t4), o(r5 || ""));
      }
      return { url: n2, searchParams: s2 };
    }(a2.url);
    for (const [e2, o2] of Object.entries(a2.query)) {
      if (void 0 !== o2) if (Array.isArray(o2)) for (const t3 of o2) r3.append(e2, t3);
      else r3.append(e2, o2);
      const n2 = r3.toString();
      n2 && (a2.url = `${t2}?${n2}`);
    }
  }
  return a2.method = a2.body && !a2.method ? "POST" : (a2.method || "GET").toUpperCase(), a2;
};
function o(e2) {
  return decodeURIComponent(e2.replace(/\+/g, " "));
}
function n(e2) {
  if (false === e2 || 0 === e2) return false;
  if (e2.connect || e2.socket) return e2;
  const r2 = Number(e2);
  return isNaN(r2) ? n(t.timeout) : { connect: r2, socket: r2 };
}
var a = /^https?:\/\//i;
var s = function(e2) {
  if (!a.test(e2.url)) throw new Error(`"${e2.url}" is not a valid URL`);
};
function c(e2) {
  return e2 && e2.__esModule && Object.prototype.hasOwnProperty.call(e2, "default") ? e2.default : e2;
}

export {
  r,
  s,
  c
};
//# sourceMappingURL=chunk-HA2BHINR.js.map
